{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\abdul\\\\git\\\\cs2001-2020_21-group-36-1\\\\healthchecker\\\\healthchecker-frontend\\\\src\\\\Components\\\\AdminManageAccount.js\";\nimport React, { Component } from \"react\";\nimport { Card, Form, Button, Col } from \"react-bootstrap\"; //import {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\nimport { faSave, faPlusSquare, faUndo } from \"@fortawesome/free-solid-svg-icons\";\nimport axios from \"axios\"; //import MyToast from \"./MyToast\"\n\nimport { Link } from \"react-router-dom\";\nexport default class Register extends Component {\n  constructor(props) {\n    super(props);\n    this.initialState = {\n      userName: \"\",\n      password: \"\",\n      roles: \"\",\n      active: \"\"\n    };\n\n    this.resetUser = () => {\n      this.setState(() => this.initialState);\n    };\n\n    this.submitUser = event => {\n      event.preventDefault();\n      const user = {\n        userName: this.state.userName,\n        password: this.state.password,\n        roles: this.state.roles,\n        active: this.state.active\n      };\n      axios.post(\"http://localhost:8080/createUser\", user).then(response => {\n        if (response.data != null) {\n          this.setState({\n            \"show\": true\n          });\n          setTimeout(() => this.setState({\n            \"show\": false\n          }), 3000);\n        } else {\n          this.setState({\n            \"show\": false\n          });\n        }\n      });\n      this.setState(this.initialState);\n    };\n\n    this.userChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.userList = () => {\n      return this.props.history.push(\"/list\");\n    };\n\n    this.state = this.initialState;\n    this.state.show = false;\n    this.userChange = this.userChange.bind(this);\n    this.submitUser = this.submitUser.bind(this);\n  }\n\n  render() {\n    const {\n      userName,\n      password,\n      roles,\n      active\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          \"display\": this.state.show ? \"block\" : \"none\"\n        },\n        children: [\"//\", /*#__PURE__*/_jsxDEV(MyToast, {\n          children: {\n            show: this.state.show,\n            message: \"Registered Successfully.\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 2\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        className: \"border border-dark bg-dark text-white\",\n        children: [\"//\", /*#__PURE__*/_jsxDEV(Card.Header, {\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faPlusSquare\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 23\n          }, this), \" Register\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onReset: this.resetUser,\n          onSubmit: this.submitUser,\n          id: \"userFormId\",\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                controlId: \"formGriduserName\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Username\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 8\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  required: true,\n                  autoComplete: \"off\",\n                  type: \"test\",\n                  name: \"userName\",\n                  value: userName,\n                  onChange: this.userChange,\n                  className: \"bg-dark text-white\",\n                  placeholder: \"Enter Username\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 8\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 4\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                controlId: \"formGridpassword\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 8\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  required: true,\n                  autoComplete: \"off\",\n                  type: \"test\",\n                  name: \"password\",\n                  value: password,\n                  onChange: this.userChange,\n                  className: \"bg-dark text-white\",\n                  placeholder: \"Enter Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 8\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 8\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 4\n            }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                controlId: \"formGridroles\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Roles\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 8\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  required: true,\n                  autoComplete: \"off\",\n                  type: \"test\",\n                  name: \"roles\",\n                  value: roles,\n                  onChange: this.userChange,\n                  className: \"bg-dark text-white\",\n                  placeholder: \"Enter Roles\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 8\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 8\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                controlId: \"formGridactive\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Active\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 8\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  required: true,\n                  autoComplete: \"off\",\n                  type: \"test\",\n                  name: \"active\",\n                  value: active,\n                  onChange: this.userChange,\n                  className: \"bg-dark text-white\",\n                  placeholder: \"Enter Active State (true/false)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 8\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 4\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 4\n            }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n              style: {\n                \"textAlign\": \"right\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                size: \"sm\",\n                variant: \"primary\",\n                type: \"submit\",\n                children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faSave\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 8\n                }, this), \"Submit\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 8\n              }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n                size: \"sm\",\n                variant: \"primary\",\n                type: \"reset\",\n                children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faUndo\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 14\n                }, this), \"Reset\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 8\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/admin\",\n            children: \"Back to admin page \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 2\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/abdul/git/cs2001-2020_21-group-36-1/healthchecker/healthchecker-frontend/src/Components/AdminManageAccount.js"],"names":["React","Component","Card","Form","Button","Col","faSave","faPlusSquare","faUndo","axios","Link","Register","constructor","props","initialState","userName","password","roles","active","resetUser","setState","submitUser","event","preventDefault","user","state","post","then","response","data","setTimeout","userChange","target","name","value","userList","history","push","show","bind","render","message"],"mappings":"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","sourcesContent":["import React,{Component} from \"react\";\r\nimport {Card,Form,Button,Col} from \"react-bootstrap\"\r\n//import {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faSave,faPlusSquare,faUndo} from \"@fortawesome/free-solid-svg-icons\"\r\nimport axios from \"axios\";\r\n//import MyToast from \"./MyToast\"\r\nimport {Link} from \"react-router-dom\"\r\n\r\nexport default class Register extends Component \r\n{\r\n\t\r\nconstructor(props)\r\n{\r\n\tsuper(props);\r\n\tthis.state = this.initialState;\r\n\tthis.state.show=false\r\n\tthis.userChange=this.userChange.bind(this);\r\n\tthis.submitUser=this.submitUser.bind(this);\r\n}\r\n\r\ninitialState = \r\n{\r\nuserName:\"\",password:\"\",roles:\"\",active:\"\"\r\n}\r\n\r\nresetUser=() => \r\n{\r\nthis.setState(() => this.initialState)\r\n}\r\n\r\nsubmitUser= event =>\r\n{\r\n\tevent.preventDefault();\r\n\t\r\n\tconst user = \r\n\t{\r\n\t         userName:  this.state.userName,\r\n    \t\t password: this.state.password,\r\n    \t\t roles: this.state.roles,\r\n    \t\t active: this.state.active\r\n\t};\r\n\t\r\n\taxios.post(\"http://localhost:8080/createUser\",user)\r\n\t.then(response => \r\n\t{\r\n\t\r\n\tif(response.data!=null)\r\n\t{\r\n\tthis.setState({\"show\":true});\r\n\tsetTimeout(() => this.setState({\"show\":false}),3000);\r\n\t}\r\n\t\r\n\telse\r\n\t{\r\n\tthis.setState({\"show\":false});\r\n\t}\r\n\t});\r\n\t\r\n\tthis.setState(this.initialState);\r\n}\r\n\r\nuserChange =event =>\r\n{\r\n\tthis.setState({\r\n\t\t[event.target.name]:event.target.value\r\n\t})\r\n};\r\n\r\nuserList=()=>{\r\nreturn this.props.history.push(\"/list\");\r\n};\r\n\r\nrender()\r\n{\r\nconst {userName,password,roles,active}=this.state;\r\n\treturn (\r\n\t<div>\r\n\t<div style={{\"display\":this.state.show ? \"block\" : \"none\"}}>\r\n\t //<MyToast children = {{show:this.state.show, message:\"Registered Successfully.\"}}/>\r\n\t </div>\r\n\t <Card className={\"border border-dark bg-dark text-white\"}>\r\n     \t\t//<Card.Header><FontAwesomeIcon icon={faPlusSquare} /> Register</Card.Header>\r\n     \t\t<Form onReset={this.resetUser} onSubmit={this.submitUser} id=\"userFormId\">\r\n     \t\t<Card.Body>\r\n     \t\t\r\n\t\t\t<Form.Row>\r\n     \t\t\r\n\t\t\t<Form.Group as= {Col} controlId=\"formGriduserName\">\r\n     \t\t<Form.Label>Username</Form.Label>\r\n     \t\t<Form.Control required autoComplete=\"off\"\r\n     \t\ttype=\"test\"\r\n     \t\tname=\"userName\"\r\n     \t\tvalue={userName}\r\n     \t\tonChange={this.userChange}\r\n     \t\tclassName={\"bg-dark text-white\"}\r\n     \t\tplaceholder=\"Enter Username\" />\r\n     \t\t</Form.Group>\r\n\t\t\t\r\n     \t\t<Form.Group as= {Col} controlId=\"formGridpassword\">\r\n     \t\t<Form.Label>Password</Form.Label>\r\n     \t\t<Form.Control required autoComplete=\"off\"\r\n     \t\ttype=\"test\"\r\n     \t\tname=\"password\"\r\n     \t\tvalue={password}\r\n     \t\tonChange={this.userChange}\r\n     \t\tclassName={\"bg-dark text-white\"}\r\n     \t\tplaceholder=\"Enter Password\" />\r\n     \t\t</Form.Group>\r\n            \r\n\t\t\t</Form.Row>\r\n     \t\t\r\n\t\t\t<Form.Row>\r\n\t\t\t\r\n     \t\t<Form.Group as= {Col} controlId=\"formGridroles\">\r\n     \t\t<Form.Label>Roles</Form.Label>\r\n     \t\t<Form.Control required autoComplete=\"off\"\r\n     \t\ttype=\"test\"\r\n     \t\tname=\"roles\"\r\n     \t\tvalue={roles}\r\n     \t\tonChange={this.userChange}\r\n     \t\tclassName={\"bg-dark text-white\"}\r\n     \t\tplaceholder=\"Enter Roles\" />\r\n     \t\t</Form.Group>\r\n     \t\t\r\n\t\t\t<Form.Group as= {Col} controlId=\"formGridactive\">\r\n     \t\t<Form.Label>Active</Form.Label>\r\n     \t\t<Form.Control required autoComplete=\"off\"\r\n     \t\ttype=\"test\"\r\n     \t\tname=\"active\"\r\n     \t\tvalue={active}\r\n     \t\tonChange={this.userChange}\r\n     \t\tclassName={\"bg-dark text-white\"}\r\n     \t\tplaceholder=\"Enter Active State (true/false)\" />\r\n     \t\t</Form.Group>\r\n             \r\n\t\t\t</Form.Row>\r\n\t\t\t \r\n            <Card.Footer style={{\"textAlign\":\"right\"}}>\r\n     \t\t<Button size=\"sm\" variant=\"primary\" type=\"submit\">\r\n     \t\t<FontAwesomeIcon icon={faSave} />Submit\r\n     \t\t</Button>{\" \"}\r\n     \t\t<Button size=\"sm\" variant=\"primary\" type=\"reset\">\r\n             <FontAwesomeIcon icon={faUndo} />Reset\r\n             </Button>\r\n     \t\t</Card.Footer>\r\n     \t\t</Card.Body>\r\n     \t\t</Form>\r\n     \t\t<center><Link to=\"/admin\">Back to admin page </Link></center>\r\n     \t\t</Card>\r\n\t</div>\r\n        );\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}